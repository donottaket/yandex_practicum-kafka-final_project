import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask;

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'kz.yandex_practicum.kafka.final_project'
version = '0.0.1-SNAPSHOT'
description = 'shop'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.avro:avro:1.12.0'
    implementation 'io.confluent:kafka-avro-serializer:7.9.2'
}

def generateAvro = tasks.named('generateAvroJava', GenerateAvroJavaTask)

generateAvro.configure {
    source("src/main/avro")
    outputDir.set(layout.buildDirectory.dir("generated/sources").get().asFile)
}

tasks.named('compileJava') {
    dependsOn(generateAvro)
}

sourceSets {
    main {
        java.srcDir(generateAvro.map { it.outputDir })
    }
}