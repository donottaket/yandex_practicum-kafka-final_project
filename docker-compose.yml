networks:
  analytics-system-network:
    driver: bridge

x-kafka-common: &kafka-common
  image: bitnami/kafka:3.9.0
  networks:
    - analytics-system-network

x-kafka-common-env: &kafka-common-env
  KAFKA_ENABLE_KRAFT: yes
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SSL,CLIENT:SSL,CONTROLLER:SSL
  KAFKA_CFG_SSL_KEYSTORE_LOCATION: /bitnami/kafka/config/certs/kafka.keystore.jks
  KAFKA_CFG_SSL_KEYSTORE_TYPE: JKS
  KAFKA_CFG_SSL_TRUSTSTORE_LOCATION: /bitnami/kafka/config/certs/kafka.truststore.jks
  KAFKA_CFG_SSL_TRUSTSTORE_TYPE: JKS
  KAFKA_CFG_LISTENER_NAME_CONTROLLER_SSL_CLIENT_AUTH: required
  KAFKA_CFG_LISTENER_NAME_INTERNAL_SSL_CLIENT_AUTH: required
  KAFKA_CFG_LISTENER_NAME_CLIENT_SSL_CLIENT_AUTH: required
  KAFKA_CFG_AUTHORIZER_CLASS_NAME: org.apache.kafka.metadata.authorizer.StandardAuthorizer
  KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND: false
  KAFKA_CFG_SSL_PRINCIPAL_MAPPING_RULES: 'RULE:^CN=([^,]+),?.*$/$1/, DEFAULT'
  KAFKA_CFG_SUPER_USERS: User:kafka-0-broker-0;User:kafka-0-broker-1;User:kafka-0-broker-2;User:kafka-1-broker-0;User:kafka-1-broker-1;User:kafka-1-broker-2;User:kafka-0-controller-0;User:kafka-0-controller-1;User:kafka-0-controller-2;User:kafka-1-controller-0;User:kafka-1-controller-1;User:kafka-1-controller-2;User:kafka-0-acl;User:kafka-1-acl;User:ksql-db;User:kafka-ui;User:kafka-connect-mirroring
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false

services:
  ######################################################################################################################
  ## UTILS #############################################################################################################
  ######################################################################################################################

  certificate-generation:
    image: eclipse-temurin:17-jdk
    container_name: certificate-generation
    working_dir: /workspace
    entrypoint: [ "/bin/bash","-lc" ]
    command:
      - |
        apt-get update && apt-get install -y --no-install-recommends openssl && rm -rf /var/lib/apt/lists/*;
        cp generate.sh /tmp/generate.sh;
        sed -i 's/\r$//' /tmp/generate.sh;
        bash /tmp/generate.sh
    environment:
      KAFKA_0_CONTROLLER_0_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_CONTROLLER_0_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_KEY_PASSWORD}
      KAFKA_0_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_CONTROLLER_1_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_CONTROLLER_1_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_KEY_PASSWORD}
      KAFKA_0_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_CONTROLLER_2_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_CONTROLLER_2_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_KEY_PASSWORD}
      KAFKA_0_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_BROKER_0_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_BROKER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_BROKER_0_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_0_SSL_KEY_PASSWORD}
      KAFKA_0_BROKER_0_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_BROKER_0_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_BROKER_1_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_BROKER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_BROKER_1_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_1_SSL_KEY_PASSWORD}
      KAFKA_0_BROKER_1_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_BROKER_1_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_BROKER_2_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_BROKER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_BROKER_2_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_2_SSL_KEY_PASSWORD}
      KAFKA_0_BROKER_2_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_BROKER_2_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_0_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_0_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_KEY_PASSWORD}
      KAFKA_1_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_1_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_1_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_KEY_PASSWORD}
      KAFKA_1_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_2_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_CONTROLLER_2_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_KEY_PASSWORD}
      KAFKA_1_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_BROKER_0_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_BROKER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_BROKER_0_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_0_SSL_KEY_PASSWORD}
      KAFKA_1_BROKER_0_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_BROKER_0_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_BROKER_1_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_BROKER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_BROKER_1_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_1_SSL_KEY_PASSWORD}
      KAFKA_1_BROKER_1_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_BROKER_1_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_BROKER_2_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_BROKER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_BROKER_2_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_2_SSL_KEY_PASSWORD}
      KAFKA_1_BROKER_2_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_BROKER_2_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_ACL_SSL_KEY_STORE_PASSWORD: ${KAFKA_0_ACL_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_ACL_SSL_KEY_PASSWORD: ${KAFKA_0_ACL_SSL_KEY_PASSWORD}
      KAFKA_0_ACL_SSL_TRUST_STORE_PASSWORD: ${KAFKA_0_ACL_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_ACL_SSL_KEY_STORE_PASSWORD: ${KAFKA_1_ACL_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_ACL_SSL_KEY_PASSWORD: ${KAFKA_1_ACL_SSL_KEY_PASSWORD}
      KAFKA_1_ACL_SSL_TRUST_STORE_PASSWORD: ${KAFKA_1_ACL_SSL_TRUST_STORE_PASSWORD}
      SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD}
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_PASSWORD}
      SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD}
      KAFKA_CONNECT_SSL_KEY_STORE_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_STORE_PASSWORD}
      KAFKA_CONNECT_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_PASSWORD}
      KAFKA_CONNECT_SSL_TRUST_STORE_PASSWORD: ${KAFKA_CONNECT_SSL_TRUST_STORE_PASSWORD}
      KSQL_DB_SSL_KEY_STORE_PASSWORD: ${KSQL_DB_SSL_KEY_STORE_PASSWORD}
      KSQL_DB_SSL_KEY_PASSWORD: ${KSQL_DB_SSL_KEY_PASSWORD}
      KSQL_DB_SSL_TRUST_STORE_PASSWORD: ${KSQL_DB_SSL_TRUST_STORE_PASSWORD}
      SHOP_SSL_KEY_STORE_PASSWORD: ${SHOP_SSL_KEY_STORE_PASSWORD}
      SHOP_SSL_KEY_PASSWORD: ${SHOP_SSL_KEY_PASSWORD}
      SHOP_SSL_TRUST_STORE_PASSWORD: ${SHOP_SSL_TRUST_STORE_PASSWORD}
      PRODUCT_FILTER_SSL_KEY_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_STORE_PASSWORD}
      PRODUCT_FILTER_SSL_KEY_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_PASSWORD}
      PRODUCT_FILTER_SSL_TRUST_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_TRUST_STORE_PASSWORD}
      KAFKA_UI_SSL_KEY_STORE_PASSWORD: ${KAFKA_UI_SSL_KEY_STORE_PASSWORD}
      KAFKA_UI_SSL_KEY_PASSWORD: ${KAFKA_UI_SSL_KEY_PASSWORD}
      KAFKA_UI_SSL_TRUST_STORE_PASSWORD: ${KAFKA_UI_SSL_TRUST_STORE_PASSWORD}
      KAFKA_CONNECT_MIRRORING_SSL_KEY_STORE_PASSWORD: ${KAFKA_CONNECT_MIRRORING_SSL_KEY_STORE_PASSWORD}
      KAFKA_CONNECT_MIRRORING_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_MIRRORING_SSL_KEY_PASSWORD}
      KAFKA_CONNECT_MIRRORING_SSL_TRUST_STORE_PASSWORD: ${KAFKA_CONNECT_MIRRORING_SSL_TRUST_STORE_PASSWORD}
      NIFI_SSL_KEY_STORE_PASSWORD: ${NIFI_SSL_KEY_STORE_PASSWORD}
      NIFI_SSL_KEY_PASSWORD: ${NIFI_SSL_KEY_PASSWORD}
      NIFI_SSL_TRUST_STORE_PASSWORD: ${NIFI_SSL_TRUST_STORE_PASSWORD}
      CLIENT_SSL_KEY_STORE_PASSWORD: ${CLIENT_SSL_KEY_STORE_PASSWORD}
      CLIENT_SSL_KEY_PASSWORD: ${CLIENT_SSL_KEY_PASSWORD}
      CLIENT_SSL_TRUST_STORE_PASSWORD: ${CLIENT_SSL_TRUST_STORE_PASSWORD}
      CLIENT_CLI_SSL_KEY_PASSWORD: ${CLIENT_CLI_SSL_KEY_PASSWORD}
    volumes:
      - ./certificate_generation/generate.sh:/workspace/generate.sh:ro
      - ./certificate_generation/configurations:/workspace/configurations:ro
      - ./certificate_generation/certificates:/workspace/certificates

  ######################################################################################################################
  ## KAFKA CLUSTER 0 ###################################################################################################
  ######################################################################################################################

  kafka-0-controller-0:
    <<: *kafka-common
    container_name: kafka-0-controller-0
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_0_controller_0.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_controller_0.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_NODE_ID: 1000
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9091
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD}

  kafka-0-controller-1:
    <<: *kafka-common
    container_name: kafka-0-controller-1
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_0_controller_1.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_controller_1.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_NODE_ID: 1001
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9092
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD}

  kafka-0-controller-2:
    <<: *kafka-common
    container_name: kafka-0-controller-2
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_0_controller_2.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_controller_2.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_NODE_ID: 1002
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD}

  kafka-0-broker-0:
    <<: *kafka-common
    container_name: kafka-0-broker-0
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_0_broker_0.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_broker_0.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-0-broker-0:9092,CLIENT://kafka-0-broker-0:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_BROKER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_0_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_BROKER_0_SSL_TRUST_STORE_PASSWORD}

  kafka-0-broker-1:
    <<: *kafka-common
    container_name: kafka-0-broker-1
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_0_broker_1.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_broker_1.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-0-broker-1:9092,CLIENT://kafka-0-broker-1:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_BROKER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_1_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_BROKER_1_SSL_TRUST_STORE_PASSWORD}

  kafka-0-broker-2:
    <<: *kafka-common
    container_name: kafka-0-broker-2
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_0_broker_2.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_0_broker_2.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-0-controller-0:9091,1001@kafka-0-controller-1:9092,1002@kafka-0-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-0-broker-2:9092,CLIENT://kafka-0-broker-2:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1w
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_0_BROKER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_0_BROKER_2_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_0_BROKER_2_SSL_TRUST_STORE_PASSWORD}

  ######################################################################################################################
  ## KAFKA CLUSTER 1 ###################################################################################################
  ######################################################################################################################

  kafka-1-controller-0:
    <<: *kafka-common
    container_name: kafka-1-controller-0
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_1_controller_0.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_controller_0.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_NODE_ID: 1000
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9091
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_0_SSL_TRUST_STORE_PASSWORD}

  kafka-1-controller-1:
    <<: *kafka-common
    container_name: kafka-1-controller-1
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_1_controller_1.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_controller_1.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_NODE_ID: 1001
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9092
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_1_SSL_TRUST_STORE_PASSWORD}

  kafka-1-controller-2:
    <<: *kafka-common
    container_name: kafka-1-controller-2
    profiles:
      - step_2
    volumes:
      - ./certificate_generation/certificates/kafka_1_controller_2.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_controller_2.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_NODE_ID: 1002
      KAFKA_CFG_PROCESS_ROLES: controller
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_CONTROLLER_2_SSL_TRUST_STORE_PASSWORD}

  kafka-1-broker-0:
    <<: *kafka-common
    container_name: kafka-1-broker-0
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_1_broker_0.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_broker_0.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-1-broker-0:9092,CLIENT://kafka-1-broker-0:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_BROKER_0_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_0_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_BROKER_0_SSL_TRUST_STORE_PASSWORD}

  kafka-1-broker-1:
    <<: *kafka-common
    container_name: kafka-1-broker-1
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_1_broker_1.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_broker_1.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-1-broker-1:9092,CLIENT://kafka-1-broker-1:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_BROKER_1_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_1_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_BROKER_1_SSL_TRUST_STORE_PASSWORD}

  kafka-1-broker-2:
    <<: *kafka-common
    container_name: kafka-1-broker-2
    profiles:
      - step_3
    volumes:
      - ./certificate_generation/certificates/kafka_1_broker_2.key_store.jks:/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certificate_generation/certificates/kafka_1_broker_2.trust_store.jks:/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    environment:
      <<: *kafka-common-env
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1000@kafka-1-controller-0:9091,1001@kafka-1-controller-1:9092,1002@kafka-1-controller-2:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,CLIENT://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka-1-broker-2:9092,CLIENT://kafka-1-broker-2:9094
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_CFG_MIN_INSYNC_REPLICAS: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_KRAFT_CLUSTER_ID: vZ4xlV5eQG2l8Y0aF_Sy1q
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: ${KAFKA_1_BROKER_2_SSL_KEY_STORE_PASSWORD}
      KAFKA_CFG_SSL_KEY_PASSWORD: ${KAFKA_1_BROKER_2_SSL_KEY_PASSWORD}
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_1_BROKER_2_SSL_TRUST_STORE_PASSWORD}

  ######################################################################################################################
  ## ELASTICSEARCH #####################################################################################################
  ######################################################################################################################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.10
    container_name: elasticsearch
    profiles:
      - step_1
    networks:
      - analytics-system-network
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch_cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.ml.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  ######################################################################################################################
  ## KAFKA UTILS (ACL, SCHEMA REGISTRY, CONNECT, MIRROR MAKER, KSQL DB, KAFKA UI) ######################################
  ######################################################################################################################

  kafka-0-acl:
    image: bitnami/kafka:3.9.0
    container_name: kafka-0-acl
    profiles:
      - step_4
    networks:
      - analytics-system-network
    volumes:
      - ./kafka_acl/kafka_0_acl.sh:/usr/local/bin/kafka_0_acl.sh:ro
      - ./certificate_generation/certificates/kafka_0_acl.key_store.jks:/etc/kafka_0_acl.key_store.jks:ro
      - ./certificate_generation/certificates/kafka_0_acl.trust_store.jks:/etc/kafka_0_acl.trust_store.jks:ro
    environment:
      KAFKA_0_ACL_KEY_PASSWORD: ${KAFKA_0_ACL_SSL_KEY_PASSWORD}
      KAFKA_0_ACL_KEY_STORE_LOCATION: /etc/kafka_0_acl.key_store.jks
      KAFKA_0_ACL_KEY_STORE_PASSWORD: ${KAFKA_0_ACL_SSL_KEY_STORE_PASSWORD}
      KAFKA_0_ACL_KEY_STORE_TYPE: JKS
      KAFKA_0_ACL_TRUST_STORE_LOCATION: /etc/kafka_0_acl.trust_store.jks
      KAFKA_0_ACL_TRUST_STORE_PASSWORD: ${KAFKA_0_ACL_SSL_TRUST_STORE_PASSWORD}
      KAFKA_0_ACL_TRUST_STORE_TYPE: JKS
      BOOTSTRAP_SERVER: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
    command: [ "bash","-lc","/usr/local/bin/kafka_0_acl.sh" ]

  kafka-1-acl:
    image: bitnami/kafka:3.9.0
    container_name: kafka-1-acl
    profiles:
      - step_4
    networks:
      - analytics-system-network
    volumes:
      - ./kafka_acl/kafka_1_acl.sh:/usr/local/bin/kafka_1_acl.sh:ro
      - ./certificate_generation/certificates/kafka_1_acl.key_store.jks:/etc/kafka_1_acl.key_store.jks:ro
      - ./certificate_generation/certificates/kafka_1_acl.trust_store.jks:/etc/kafka_1_acl.trust_store.jks:ro
    environment:
      KAFKA_1_ACL_KEY_PASSWORD: ${KAFKA_1_ACL_SSL_KEY_PASSWORD}
      KAFKA_1_ACL_KEY_STORE_LOCATION: /etc/kafka_1_acl.key_store.jks
      KAFKA_1_ACL_KEY_STORE_PASSWORD: ${KAFKA_1_ACL_SSL_KEY_STORE_PASSWORD}
      KAFKA_1_ACL_KEY_STORE_TYPE: JKS
      KAFKA_1_ACL_TRUST_STORE_LOCATION: /etc/kafka_1_acl.trust_store.jks
      KAFKA_1_ACL_TRUST_STORE_PASSWORD: ${KAFKA_1_ACL_SSL_TRUST_STORE_PASSWORD}
      KAFKA_1_ACL_TRUST_STORE_TYPE: JKS
      BOOTSTRAP_SERVER: kafka-1-broker-0:9094,kafka-1-broker-1:9094,kafka-1-broker-2:9094
    command: [ "bash","-lc","/usr/local/bin/kafka_1_acl.sh" ]

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.2
    container_name: schema-registry
    hostname: schema-registry
    profiles:
      - step_5
    ports:
      - "8081:8081"
    networks:
      - analytics-system-network
    volumes:
      - ./certificate_generation/certificates/schema_registry.key_store.jks:/etc/schema-registry/certs/schema_registry.key_store.jks:ro
      - ./certificate_generation/certificates/schema_registry.trust_store.jks:/etc/schema-registry/certs/schema_registry.trust_store.jks:ro
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: https://0.0.0.0:8081
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: true
      SCHEMA_REGISTRY_INTER_INSTANCE_LISTENER_NAME: https
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https

      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: schemas
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SSL
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_PASSWORD}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/certs/schema_registry.trust_store.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_TYPE: JKS
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION: /etc/schema-registry/certs/schema_registry.key_store.jks
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD}
      SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_TYPE: JKS
      SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_PASSWORD}
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/schema-registry/certs/schema_registry.key_store.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD}
      SCHEMA_REGISTRY_SSL_KEYSTORE_TYPE: JKS
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/schema-registry/certs/schema_registry.trust_store.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD}
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_TYPE: JKS

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.9.2
    container_name: kafka-connect
    profiles:
      - step_6
    hostname: kafka-connect
    ports:
      - "8083:8083"
    networks:
      - analytics-system-network
    volumes:
      - ./kafka_connect/plugins/:/etc/kafka_connect/jars:ro
      - ./certificate_generation/certificates/kafka_connect.key_store.jks:/etc/kafka-connect/certs/kafka_connect.key_store.jks:ro
      - ./certificate_generation/certificates/kafka_connect.trust_store.jks:/etc/kafka-connect/certs/kafka_connect.trust_store.jks:ro
    environment:
      CONNECT_REST_LISTENERS: https://0.0.0.0:8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect

      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_REST_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.key_store.jks
      CONNECT_REST_SSL_KEYSTORE_PASSWORD: kafka_connect_ssl_key_store_password
      CONNECT_REST_SSL_KEY_PASSWORD: kafka_connect_ssl_key_password
      CONNECT_REST_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.trust_store.jks
      CONNECT_REST_SSL_TRUSTSTORE_PASSWORD: kafka_connect_ssl_trust_store_password
      CONNECT_REST_SSL_CLIENT_AUTH: true

      CONNECT_BOOTSTRAP_SERVERS: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_PASSWORD}
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.key_store.jks
      CONNECT_SSL_KEYSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_STORE_PASSWORD}
      CONNECT_SSL_KEYSTORE_TYPE: JKS
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.trust_store.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_TRUST_STORE_PASSWORD}
      CONNECT_SSL_TRUSTSTORE_TYPE: JKS
      CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      CONNECT_CONSUMER_SECURITY_PROTOCOL: SSL
      CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.key_store.jks
      CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_STORE_PASSWORD}
      CONNECT_CONSUMER_SSL_KEYSTORE_TYPE: JKS
      CONNECT_CONSUMER_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_PASSWORD}
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.trust_store.jks
      CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_TRUST_STORE_PASSWORD}
      CONNECT_CONSUMER_SSL_TRUSTSTORE_TYPE: JKS
      CONNECT_CONSUMER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config-storage
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset-storage
      CONNECT_STATUS_STORAGE_TOPIC: connect-status-storage
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_PARTITIONS: 25
      CONNECT_STATUS_STORAGE_PARTITIONS: 5

      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter

      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_PASSWORD}
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.key_store.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_KEY_STORE_PASSWORD}
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_KEYSTORE_TYPE: JKS
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/certs/kafka_connect.trust_store.jks
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${KAFKA_CONNECT_SSL_TRUST_STORE_PASSWORD}
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_TRUSTSTORE_TYPE: JKS
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      CONNECT_VALUE_CONVERTER_VALUE_SUBJECT_NAME_STRATEGY: io.confluent.kafka.serializers.subject.RecordNameStrategy

      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: false

      CONNECT_PLUGIN_PATH: /usr/share/confluent-hub-components,/usr/share/java,/etc/kafka_connect/jars

  kafka-connect-mirroring:
    image: confluentinc/cp-kafka-connect:7.9.2
    container_name: kafka-connect-mirroring
    profiles:
      - step_5
    hostname: kafka-connect-mirroring
    command: [ "/usr/bin/connect-mirror-maker", "/etc/mm2/mirroring.properties" ]
    networks:
      - analytics-system-network
    volumes:
      - ./kafka_mirroring/mirroring.properties:/etc/mm2/mirroring.properties:ro
      - ./certificate_generation/certificates/kafka_connect_mirroring.key_store.jks:/etc/kafka-connect/certs/kafka_connect_mirroring.key_store.jks:ro
      - ./certificate_generation/certificates/kafka_connect_mirroring.trust_store.jks:/etc/kafka-connect/certs/kafka_connect_mirroring.trust_store.jks:ro

  ksql-db:
    image: confluentinc/cp-ksqldb-server:7.9.2
    container_name: ksql-db
    profiles:
      - step_6
    hostname: ksql-db
    ports:
      - "8088:8088"
    networks:
      - analytics-system-network
    volumes:
      - ./certificate_generation/certificates/ksql_db.key_store.jks:/etc/ksqldb/certs/ksql_db.key_store.jks:ro
      - ./certificate_generation/certificates/ksql_db.trust_store.jks:/etc/ksqldb/certs/ksql_db.trust_store.jks:ro
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_SSL_KEY_PASSWORD: ${KSQL_DB_SSL_KEY_PASSWORD}
      KSQL_SSL_KEYSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.key_store.jks
      KSQL_SSL_KEYSTORE_PASSWORD: ${KSQL_DB_SSL_KEY_STORE_PASSWORD}
      KSQL_SSL_KEYSTORE_TYPE: JKS
      KSQL_SSL_TRUSTSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.trust_store.jks
      KSQL_SSL_TRUSTSTORE_PASSWORD: ${KSQL_DB_SSL_TRUST_STORE_PASSWORD}
      KSQL_SSL_TRUSTSTORE_TYPE: JKS
      KSQL_SSL_CLIENT_AUTHENTICATION: REQUIRED
      KSQL_SECURITY_PROTOCOL: SSL

      KSQL_BOOTSTRAP_SERVERS: kafka-1-broker-0:9094,kafka-1-broker-1:9094,kafka-1-broker-2:9094
      KSQL_KSQL_STREAMS_SECURITY_PROTOCOL: SSL
      KSQL_KSQL_STREAMS_SSL_KEY_PASSWORD: ${KSQL_DB_SSL_KEY_PASSWORD}
      KSQL_KSQL_STREAMS_SSL_KEYSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.key_store.jks
      KSQL_KSQL_STREAMS_SSL_KEYSTORE_PASSWORD: ${KSQL_DB_SSL_KEY_STORE_PASSWORD}
      KSQL_KSQL_STREAMS_SSL_KEYSTORE_TYPE: JKS
      KSQL_KSQL_STREAMS_SSL_TRUSTSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.trust_store.jks
      KSQL_KSQL_STREAMS_SSL_TRUSTSTORE_PASSWORD: ${KSQL_DB_SSL_TRUST_STORE_PASSWORD}
      KSQL_KSQL_STREAMS_SSL_TRUSTSTORE_TYPE: JKS
      KSQL_KSQL_STREAMS_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      KSQL_KSQL_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${KSQL_DB_SSL_KEY_PASSWORD}
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.key_store.jks
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: ${KSQL_DB_SSL_KEY_STORE_PASSWORD}
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_KEYSTORE_TYPE: JKS
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/ksqldb/certs/ksql_db.trust_store.jks
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: ${KSQL_DB_SSL_TRUST_STORE_PASSWORD}
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_TRUSTSTORE_TYPE: JKS
      KSQL_KSQL_SCHEMA_REGISTRY_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

      KSQL_KSQL_SERVICE_ID: ksql-db
      KSQL_KSQL_EXTENSION_DIR: /usr/share/ksqldb/ext

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    profiles:
      - step_4
    networks:
      - analytics-system-network
    ports:
      - "8080:8080"
    volumes:
      - ./kafka_ui/application.yml:/application.yml:ro
      - ./certificate_generation/certificates/kafka_ui.key_store.jks:/etc/kafkaui/certs/kafka_ui.key_store.jks:ro
      - ./certificate_generation/certificates/kafka_ui.trust_store.jks:/etc/kafkaui/certs/kafka_ui.trust_store.jks:ro

  kafka-connector-setup:
    container_name: kafka-connector-setup
    image: curlimages/curl:8.7.1
    profiles:
      - step_7
    networks:
      - analytics-system-network
    volumes:
      - ./kafka_connect/configurations:/connectors:ro
    command: [
      "-sS", "-H", "Content-Type: application/json",
      "--data-binary", "@/connectors/elasticsearch_sink.json",
      "http://kafka-connect:8083/connectors"
    ]

  ######################################################################################################################
  ## SERVICES (CLIENT, SHOP, PRODUCT FILTER) ###########################################################################
  ######################################################################################################################

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./certificate_generation/certificates/client.key_store.jks:/app/certs/client.key_store.jks:ro
      - ./certificate_generation/certificates/client.trust_store.jks:/app/certs/client.trust_store.jks:ro
    container_name: client
    profiles:
      - step_7
    networks:
      - analytics-system-network
    ports:
      - "8090:8080"
    environment:
      SERVER_SSL_KEY_PASSWORD: ${CLIENT_SSL_KEY_PASSWORD}
      SERVER_SSL_KEY_STORE_LOCATION: /app/certs/client.key_store.jks
      SERVER_SSL_KEY_STORE_PASSWORD: ${CLIENT_SSL_KEY_STORE_PASSWORD}
      SERVER_SSL_KEY_STORE_TYPE: JKS
      SERVER_SSL_TRUST_STORE_LOCATION: /app/certs/client.trust_store.jks
      SERVER_SSL_TRUST_STORE_PASSWORD: ${CLIENT_SSL_TRUST_STORE_PASSWORD}
      SERVER_SSL_TRUST_STORE_TYPE: JKS

      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_BOOTSTRAP_SERVERS: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
      KAFKA_SSL_KEY_PASSWORD: ${CLIENT_SSL_KEY_PASSWORD}
      KAFKA_SSL_KEY_STORE_LOCATION: file:/app/certs/client.key_store.jks
      KAFKA_SSL_KEY_STORE_PASSWORD: ${CLIENT_SSL_KEY_STORE_PASSWORD}
      KAFKA_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SSL_TRUST_STORE_LOCATION: file:/app/certs/client.trust_store.jks
      KAFKA_SSL_TRUST_STORE_PASSWORD: ${CLIENT_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SSL_TRUST_STORE_TYPE: JKS

      KAFKA_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${CLIENT_SSL_KEY_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_LOCATION: /app/certs/client.key_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD: ${CLIENT_SSL_KEY_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_LOCATION: /app/certs/client.trust_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD: ${CLIENT_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_TYPE: JKS

      KSQL_DB_URL: http://ksql-db:8088
      ELASTICSEARCH_URIS: http://elasticsearch:9200
      PRODUCT_SEARCH_RESULT_TOPIC: client.search.result

  shop:
    build:
      context: ./shop
      dockerfile: Dockerfile
    volumes:
      - ./certificate_generation/certificates/shop.key_store.jks:/app/certs/shop.key_store.jks:ro
      - ./certificate_generation/certificates/shop.trust_store.jks:/app/certs/shop.trust_store.jks:ro
      - ./shop/products:/data/products:ro
    container_name: shop
    profiles:
      - step_6
    networks:
      - analytics-system-network
    ports:
      - "8091:8080"
    environment:
      SERVER_SSL_KEY_PASSWORD: ${SHOP_SSL_KEY_PASSWORD}
      SERVER_SSL_KEY_STORE_LOCATION: /app/certs/shop.key_store.jks
      SERVER_SSL_KEY_STORE_PASSWORD: ${SHOP_SSL_KEY_STORE_PASSWORD}
      SERVER_SSL_KEY_STORE_TYPE: JKS
      SERVER_SSL_TRUST_STORE_LOCATION: /app/certs/shop.trust_store.jks
      SERVER_SSL_TRUST_STORE_PASSWORD: ${SHOP_SSL_TRUST_STORE_PASSWORD}
      SERVER_SSL_TRUST_STORE_TYPE: JKS

      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_BOOTSTRAP_SERVERS: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
      KAFKA_SSL_KEY_PASSWORD: ${SHOP_SSL_KEY_PASSWORD}
      KAFKA_SSL_KEY_STORE_LOCATION: file:/app/certs/shop.key_store.jks
      KAFKA_SSL_KEY_STORE_PASSWORD: ${SHOP_SSL_KEY_STORE_PASSWORD}
      KAFKA_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SSL_TRUST_STORE_LOCATION: file:/app/certs/shop.trust_store.jks
      KAFKA_SSL_TRUST_STORE_PASSWORD: ${SHOP_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SSL_TRUST_STORE_TYPE: JKS

      KAFKA_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${SHOP_SSL_KEY_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_LOCATION: /app/certs/shop.key_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD: ${SHOP_SSL_KEY_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_LOCATION: /app/certs/shop.trust_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD: ${SHOP_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_TYPE: JKS

      PRODUCT_KAFKA_TOPIC: shop.product
      PRODUCT_DATA_DIRECTORY_PATH: /data/products
      PRODUCT_DATA_PUBLISH_INTERVAL_MS: 100

  product-filter:
    build:
      context: ./product_filter
      dockerfile: Dockerfile
    volumes:
      - ./certificate_generation/certificates/product_filter.key_store.jks:/app/certs/product_filter.key_store.jks:ro
      - ./certificate_generation/certificates/product_filter.trust_store.jks:/app/certs/product_filter.trust_store.jks:ro
      - ./product_filter/product_black_list.txt:/data/black_list.txt:ro
    container_name: product-filter
    networks:
      - analytics-system-network
    ports:
      - "8092:8080"
    environment:
      SERVER_SSL_KEY_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_PASSWORD}
      SERVER_SSL_KEY_STORE_LOCATION: /app/certs/product_filter.key_store.jks
      SERVER_SSL_KEY_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_STORE_PASSWORD}
      SERVER_SSL_KEY_STORE_TYPE: JKS
      SERVER_SSL_TRUST_STORE_LOCATION: /app/certs/product_filter.trust_store.jks
      SERVER_SSL_TRUST_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_TRUST_STORE_PASSWORD}
      SERVER_SSL_TRUST_STORE_TYPE: JKS

      KAFKA_BOOTSTRAP_SERVERS: kafka-0-broker-0:9094,kafka-0-broker-1:9094,kafka-0-broker-2:9094
      KAFKA_SSL_KEY_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_PASSWORD}
      KAFKA_SSL_KEY_STORE_LOCATION: file:/app/certs/product_filter.key_store.jks
      KAFKA_SSL_KEY_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_STORE_PASSWORD}
      KAFKA_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SSL_TRUST_STORE_LOCATION: file:/app/certs/product_filter.trust_store.jks
      KAFKA_SSL_TRUST_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SSL_TRUST_STORE_TYPE: JKS
      KAFKA_SECURITY_PROTOCOL: SSL

      KAFKA_SCHEMA_REGISTRY_URL: https://schema-registry:8081
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_LOCATION: /app/certs/product_filter.key_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_KEY_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_KEY_STORE_TYPE: JKS
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_LOCATION: /app/certs/product_filter.trust_store.jks
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_PASSWORD: ${PRODUCT_FILTER_SSL_TRUST_STORE_PASSWORD}
      KAFKA_SCHEMA_REGISTRY_SSL_TRUST_STORE_TYPE: JKS

      PRODUCT_KAFKA_TOPIC: shop.product
      FILTERED_PRODUCT_KAFKA_TOPIC: shop.product.filtered
      BLACK_LIST_KAFKA_TOPIC: product.black-list
      PRODUCT_BLACK_LIST_FILE_PATH: /data/black_list.txt

  ######################################################################################################################
  ## ANALYTICS (HDFS, SPARK, NIFI) #####################################################################################
  ######################################################################################################################

  hadoop-namenode:
    image: apache/hadoop:3.4.1
    container_name: hadoop-namenode
    profiles:
      - step_1
    hostname: hadoop-namenode
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2g"
    shm_size: 10G
    networks:
      - analytics-system-network
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hdfs/configurations/hdfs_site_namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hdfs/namenode_entrypoint.sh:/namenode_entrypoint.sh
    entrypoint: [ "/bin/bash", "/namenode_entrypoint.sh" ]
    command: [ "hdfs", "namenode" ]

  hadoop-datanode-1:
    image: apache/hadoop:3.4.1
    container_name: hadoop-datanode-1
    profiles:
      - step_2
    hostname: hadoop-datanode-1
    user: "root"
    restart: always
    platform: linux/amd64
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "2g"
    shm_size: 10G
    networks:
      - analytics-system-network
    ports:
      - "9864:9864"
      - "9970:9970"
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hdfs/configurations/hdfs_site_datanode_1.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./hdfs/datanode_entrypoint.sh:/datanode_entrypoint.sh
    entrypoint: [ "/bin/bash", "/datanode_entrypoint.sh" ]
    command: [ "hdfs", "datanode" ]

  spark-master:
    image: bitnami/spark:3.5.4
    container_name: spark-master
    profiles:
      - step_1
    networks:
      - analytics-system-network
    ports:
      - "8020:8080"
      - "7077:7077"
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
      SPARK_SSL_ENABLED: no
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      HADOOP_CONF_DIR: /opt/bitnami/spark/conf
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/bitnami/spark/conf/core-site.xml
      - ./hdfs/configurations/hdfs_site_namenode.xml:/opt/bitnami/spark/conf/hdfs-site-namenode.xml

  spark-worker-1:
    image: bitnami/spark:3.5.4
    container_name: spark-worker-1
    profiles:
      - step_2
    networks:
      - analytics-system-network
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_SSL_ENABLED: no
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      HADOOP_CONF_DIR: /opt/bitnami/spark/conf
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/bitnami/spark/conf/core-site.xml
      - ./hdfs/configurations/hdfs_site_namenode.xml:/opt/bitnami/spark/conf/hdfs-site-namenode.xml

  spark-worker-2:
    image: bitnami/spark:3.5.4
    container_name: spark-worker-2
    profiles:
      - step_2
    networks:
      - analytics-system-network
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_SSL_ENABLED: no
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no
      HADOOP_CONF_DIR: /opt/bitnami/spark/conf
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/bitnami/spark/conf/core-site.xml
      - ./hdfs/configurations/hdfs_site_namenode.xml:/opt/bitnami/spark/conf/hdfs-site-namenode.xml

  nifi:
    image: apache/nifi:1.21.0
    profiles:
      - step_2
    container_name: nifi
    user: "root"
    ports:
      - "8010:8080"
    environment:
      NIFI_WEB_HTTP_PORT: 8080
    volumes:
      - ./hdfs/configurations/core_site.xml:/opt/hadoop/etc/hadoop/core-site.xml
      - ./hdfs/configurations/hdfs_site_namenode.xml:/opt/hadoop/etc/hadoop/hdfs-site.xml
      - ./certificate_generation/certificates/nifi.key_store.jks:/etc/nifi/certs/nifi.key_store.jks:ro
      - ./certificate_generation/certificates/nifi.trust_store.jks:/etc/nifi/certs/nifi.trust_store.jks:ro
    networks:
      - analytics-system-network